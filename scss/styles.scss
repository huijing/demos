$colours: (
  green: #7ED321,
  red: #ff595e,
  yellow: #F8E81C,
  blue: #4990E2,
  purple: #DB61F4,
  
);

@function colour($colour-name) {
  @return var(--#{$colour-name}, map-get($colours, $colour-name));
}

:root {
  @each $name, $colour in $colours {
    --#{$name}: $colour;
  }
}

html {
  box-sizing: border-box;
}

*,
*:before,
*:after {
  box-sizing: inherit;
}

* {
  margin: 0;
  padding: 0;
}

main {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(20ch, 30ch));
  grid-auto-rows: minmax(20ch, 30ch);
  justify-content: center;
}

section {
  min-width: 20ch;
}

@each $name, $colour in $colours {
  section:nth-child(#{length($colours)}n + #{index(($colours), ($name $colour))}) {
    background-color: $colour;
    mix-blend-mode: color-dodge;

    a:hover {
      background-color: black;
      color: $colour;
    }
  }
}

section:first-child {
  background-color: darkgrey;
  grid-column: span 2;
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: center;
}

h1 {
  font-size: calc(2em + 2vmax);
}

a {
  display: block;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: center;
  color: initial;
  transition: color 0.7s, background-color 0.7s;
  text-decoration: none;
}

@media screen and (min-width: 480px) {
  main {
    margin-top: 4vmax;
  }

  section:first-child {
    grid-row: -2 / -4;
    grid-column: -1 / -3;
  }

  section {
    transform: rotate(45deg);
  }

  h1,
  h2 {
    transform: rotate(-45deg);
  }
}
